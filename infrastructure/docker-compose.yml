version: '3.7'

services:
  frontend:
    container_name: messenger_frontend
    build:
      context: ../frontend-app
      dockerfile: ../infrastructure/node/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
        NODE_USER_NAME: ${NODE_USER_NAME}
    environment:
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ../frontend-app:/home/app
      - messenger-node-modules:/home/app/node_modules
    networks:
      - messenger-network

  backend:
    container_name: messenger_backend
    build:
      context: php
      args:
        UID: ${UID}
        GID: ${GID}
        FPM_USER_NAME: ${FPM_USER_NAME}
        XDEBUG: ${XDEBUG}
        JWT_KEY_PASS: ${JWT_KEY_PASS}
        JWT_KEY_PATH: ${JWT_KEY_PATH}
    env_file:
      - .env
    volumes:
      - ../backend-app:/var/www
    depends_on:
      - database
    networks:
      - messenger-network

  websocket:
    container_name: messenger_websocket
    build:
      context: ../websocket-app
      dockerfile: ../infrastructure/golang/Dockerfile
    networks:
      - messenger-network

  webserver:
    container_name: messenger_webserver
    build:
      context: nginx
      args:
        SERVER_NAME: ${SERVER_NAME}
    volumes:
      - ../backend-app/assets:/var/www/assets
    depends_on:
      - backend
    networks:
      - messenger-network

  database:
    container_name: messenger_db
    image: postgres:${APP_DB_VERSION}-alpine
    environment:
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
    volumes:
      - messenger-db:/var/lib/postgresql/data
    networks:
      - messenger-network

volumes:
  messenger-db:
  messenger-node-modules:

networks:
  messenger-network:
    driver: bridge
